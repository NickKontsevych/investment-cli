import sqlite3
import logging
from modules.database import get_db_connection

# –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
logging.basicConfig(filename="log.txt", level=logging.ERROR, format="%(asctime)s - %(level–µ–Ω—å)s - %(message)s")

def update_portfolio(ticker, quantity, price, transaction_type):
    """
    –û–Ω–æ–≤–ª—é—î –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø—Ä–∏ –∫—É–ø—ñ–≤–ª—ñ –∞–±–æ –ø—Ä–æ–¥–∞–∂—É –∞–∫—Ü—ñ–π.
    :param ticker: –°–∏–º–≤–æ–ª –∞–∫—Ü—ñ—ó (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'AAPL')
    :param quantity: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ü—ñ–π
    :param price: –¶—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é
    :param transaction_type: –¢–∏–ø —É–≥–æ–¥–∏ ('BUY' –∞–±–æ 'SELL')
    """
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ü—ñ–π —ñ —Å–µ—Ä–µ–¥–Ω—é —Ü—ñ–Ω—É
            cursor.execute("SELECT quantity, avg_price FROM portfolio WHERE ticker = ?", (ticker,))
            row = cursor.fetchone()

            if transaction_type == "BUY":
                if row:  
                    old_quantity, old_avg_price = row
                    new_quantity = old_quantity + quantity
                    new_avg_price = ((old_quantity * old_avg_price) + (quantity * price)) / new_quantity
                else:
                    new_quantity = quantity
                    new_avg_price = price

                cursor.execute("""
                INSERT INTO portfolio (ticker, quantity, avg_price) 
                VALUES (?, ?, ?)
                ON CONFLICT(ticker) 
                DO UPDATE SET quantity = excluded.quantity, avg_price = excluded.avg_price
                """, (ticker, new_quantity, new_avg_price))

            elif transaction_type == "SELL":
                if row and row[0] >= quantity:
                    new_quantity = row[0] - quantity
                    if new_quantity == 0:
                        cursor.execute("DELETE FROM portfolio WHERE ticker = ?", (ticker,))
                    else:
                        cursor.execute("UPDATE portfolio SET quantity = ? WHERE ticker = ?", (new_quantity, ticker))
                else:
                    print("‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ–º–∞—î –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∞–∫—Ü—ñ–π –¥–ª—è –ø—Ä–æ–¥–∞–∂—É!")
                    return

            conn.commit()
            print(f"‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ: {transaction_type} {quantity} {ticker} –ø–æ {price}$")
    
    except sqlite3.Error as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {e}")
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø–æ—Ä—Ç—Ñ–µ–ª—è. –î–µ—Ç–∞–ª—ñ –≤ log.txt.")

def get_portfolio():
    """
    –û—Ç—Ä–∏–º—É—î –≤—Å—ñ –∞–∫—Ç–∏–≤–∏ –∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è.
    """
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM portfolio")
            portfolio = cursor.fetchall()
            return portfolio
    
    except sqlite3.Error as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {e}")
        return []

def save_portfolio_snapshot():
    """–ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ —ñ—Å—Ç–æ—Ä—ñ—é."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            portfolio = get_portfolio()

            for ticker, quantity, avg_price in portfolio:
                total_value = quantity * avg_price
                cursor.execute("""
                INSERT INTO portfolio_history (date, ticker, quantity, avg_price, total_value)
                VALUES (datetime('now'), ?, ?, ?, ?)
                """, (ticker, quantity, avg_price, total_value))

            conn.commit()
            print("üìå –Ü—Å—Ç–æ—Ä—ñ—è –ø–æ—Ä—Ç—Ñ–µ–ª—è –æ–Ω–æ–≤–ª–µ–Ω–∞.")
    
    except sqlite3.Error as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –ø–æ—Ä—Ç—Ñ–µ–ª—è: {e}")
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –ø–æ—Ä—Ç—Ñ–µ–ª—è.")