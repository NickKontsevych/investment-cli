import yfinance as yf
from modules.portfolio import get_portfolio
from modules.transactions import get_transactions
from prettytable import PrettyTable
import os

def get_current_price(ticker):
    """–û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω—É —Ä–∏–Ω–∫–æ–≤—É —Ü—ñ–Ω—É –∞–∫—Ü—ñ—ó —á–µ—Ä–µ–∑ Yahoo Finance API."""
    try:
        stock = yf.Ticker(ticker)
        current_price = stock.history(period="1d")["Close"].iloc[-1]  # –ë–µ—Ä–µ–º–æ –æ—Å—Ç–∞–Ω–Ω—é –¥–æ—Å—Ç—É–ø–Ω—É —Ü—ñ–Ω—É
        return round(float(current_price), 2)
    except Exception as e:
        print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü—ñ–Ω–∏ –¥–ª—è {ticker}: {e}")
        return None

def calculate_summary():
    """–û–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è, –ø—Ä–∏–±—É—Ç–æ–∫ —Ç–∞ ROI."""
    portfolio = get_portfolio()
    transactions = get_transactions()

    total_value = 0  # –ü–æ—Ç–æ—á–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è
    total_invested = 0  # –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —ñ–Ω–≤–µ—Å—Ç–æ–≤–∞–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤
    total_profit = 0  # –ó–∞–≥–∞–ª—å–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫
    roi = 0  # ROI —É %

    if portfolio:
        table = PrettyTable(["–¢—ñ–∫–µ—Ä", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–°–µ—Ä–µ–¥–Ω—è —Ü—ñ–Ω–∞", "–ü–æ—Ç–æ—á–Ω–∞ —Ü—ñ–Ω–∞", "–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å", "–ü—Ä–∏–±—É—Ç–æ–∫/–ó–±–∏—Ç–æ–∫"])
        for ticker, quantity, avg_price in portfolio:
            current_price = get_current_price(ticker)  # –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—É —Ü—ñ–Ω—É

            if current_price is None:
                current_price = avg_price  # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–µ—Ä–µ–¥–Ω—é —Ü—ñ–Ω—É –ø–æ–∫—É–ø–∫–∏

            current_value = quantity * current_price  # –ü–æ—Ç–æ—á–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å
            total_value += current_value
            total_invested += quantity * avg_price  # –í–∏—Ç—Ä–∞—Ç–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É

            # –ù–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏–±—É—Ç–∫—É/–∑–±–∏—Ç–∫—É
            profit = (current_price - avg_price) * quantity
            total_profit += profit

            table.add_row([ticker, quantity, avg_price, round(current_price, 2), round(current_value, 2), round(profit, 2)])

        print("\nüìä **–ê–ù–ê–õ–Ü–ó –ü–û–†–¢–§–ï–õ–Ø**")
        print(table)
    else:
        print("‚ùå –ü–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ—Ä–æ–∂–Ω—ñ–π!")

    # –û–±—á–∏—Å–ª–µ–Ω–Ω—è ROI
    if total_invested > 0:
        roi = (total_profit / total_invested) * 100

    print(f"\nüí∞ –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è: **{round(total_value, 2)}$**")
    print(f"üíµ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —ñ–Ω–≤–µ—Å—Ç–æ–≤–∞–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤: **{round(total_invested, 2)}$**")
    print(f"üìà **–ó–∞–≥–∞–ª—å–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫/–∑–±–∏—Ç–æ–∫:** **{round(total_profit, 2)}$**")
    print(f"üìä **ROI:** **{round(roi, 2)}%**")

    # ASCII –≥—Ä–∞—Ñ—ñ–∫ –¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø–æ—Ä—Ç—Ñ–µ–ª—è
    if portfolio:
        print("\nüìà **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è (–≥—Ä–∞—Ñ—ñ–∫)**")

        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è termgraph
        with open("portfolio_data.txt", "w") as f:
            f.write("# Portfolio Distribution\n")
            for row in portfolio:
                f.write(f"{row[0]} {row[1]}\n")  # –¢—ñ–∫–µ—Ä, –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ü—ñ–π

        # –í–∏–∫–ª–∏–∫–∞—î–º–æ termgraph —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä—è–¥–æ–∫
        os.system("termgraph portfolio_data.txt")

        # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –ø—ñ—Å–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
        os.remove("portfolio_data.txt")